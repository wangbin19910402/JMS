<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.wangbin.project.base.business.mapper.AdminUserMapper" >
  <resultMap id="BaseResultMap" type="com.wangbin.project.base.business.entity.AdminUser" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="user_name" property="userName" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="role_id" property="roleId" jdbcType="INTEGER" />
    <result column="state" property="state" jdbcType="INTEGER" />
    <result column="created_time" property="createdTime" />
    <result column="updated_time" property="updatedTime" />
  </resultMap>

  <sql id="Base_Column_List" >
    id, user_name, password, phone, email, role_id, state, created_time, updated_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from admin_user
    where state = 0 and id = #{id,jdbcType=INTEGER}
  </select>
  <insert id="insert" parameterType="com.wangbin.project.base.business.entity.AdminUser" >
    insert into admin_user (id, user_name, password, 
      phone, email, role_id, 
      state, created_time, updated_time
      )
    values (#{id,jdbcType=INTEGER}, #{userName,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{phone,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{roleId,jdbcType=VARCHAR}, 
      #{state,jdbcType=TINYINT}, #{createdTime,jdbcType=TIMESTAMP}, #{updatedTime,jdbcType=TIMESTAMP}
      )
  </insert>

  <update id="updateByPrimaryKeySelective" parameterType="com.wangbin.project.base.business.entity.AdminUser" >
    update admin_user
    <set >
      <if test="userName != null" >
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="roleId != null" >
        role_id = #{roleId,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=TINYINT},
      </if>
      <if test="createdTime != null" >
        created_time = #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedTime != null" >
        updated_time = #{updatedTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>

  <!-- 新增 -->
  <select id="getAdminUserSumByParam" resultType="java.lang.Integer" parameterType="java.util.HashMap" >
    select count(1)
    <include refid="Base_Column_List" />
    from admin_user where state = 0
    <if test="userName != null and userName != '' " >
      and user_name like  CONCAT('%',#{userName,jdbcType=VARCHAR},'%')
    </if>
    <if test="phone != null and phone != '' " >
      and phone =#{phone,jdbcType=VARCHAR}
    </if>
    <if test="email != null and email != '' " >
      and email =#{email,jdbcType=VARCHAR}
    </if>
    <if test="roleId != null and roleId != 0" >
      and role_id =#{roleId,jdbcType=INTEGER}
    </if>
  </select>

  <select id="getAdminUserListByPage" resultMap="BaseResultMap" parameterType="java.util.HashMap" >
    select
    <include refid="Base_Column_List" />
    from admin_user where state = 0
    <if test="userName != null and userName != '' " >
      and user_name like  CONCAT('%',#{userName,jdbcType=VARCHAR},'%')
    </if>
    <if test="phone != null and phone != '' " >
      and phone =#{phone,jdbcType=VARCHAR}
    </if>
    <if test="email != null and email != '' " >
      and email =#{email,jdbcType=VARCHAR}
    </if>
    <if test="roleId != null and roleId != 0" >
      and role_id =#{roleId,jdbcType=INTEGER}
    </if>
    limit #{pageBegin} , #{pageSize}
  </select>

  <update id="updateStatusByIds" parameterType="java.util.HashMap">
    update admin_user
    <set >
      state = #{state,jdbcType=INTEGER},
    </set>
    where id in
    <foreach item="id" collection="ids" open="(" separator="," close=")">
      #{id,jdbcType=INTEGER}
    </foreach>
  </update>

  <update id="updateStatus" parameterType="java.util.HashMap">
    update admin_user
    <set >
      state = #{state,jdbcType=INTEGER}
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="getAdminUserByName" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select
    <include refid="Base_Column_List" />
    from admin_user
    where state = 0 and user_name = #{userName,jdbcType=VARCHAR} limit 1
  </select>

  <select id="getAdminUserByPhone" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select
    <include refid="Base_Column_List" />
    from admin_user
    where state = 0 and phone = #{phone,jdbcType=VARCHAR} limit 1
  </select>


</mapper>